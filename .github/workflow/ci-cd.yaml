name: CI-CD Multi-Cloud Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: devops-multicloud-demo

jobs:
  test_build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch, optional)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
          pip install pytest
      - name: Run tests
        run: |
          if [ -f tests/test_app.py ]; then
            pytest -q
          else
            echo "No tests found, skipping pytest"
          fi

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: ./app
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest

  deploy_infra_and_k8s:
    needs: test_build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init (AWS)
        run: |
          echo "Terraform init (template) -- fill providers and credentials in terraform/aws"
          ls -la terraform/aws || true

      - name: Terraform Init (GCP)
        run: |
          echo "Terraform init (template) -- fill providers and credentials in terraform/gcp"
          ls -la terraform/gcp || true

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Deploy to Kubernetes (example)
        env:
          KUBECONFIG_AWS: ${{ secrets.KUBECONFIG_AWS }} # kubeconfig content for AWS cluster
          KUBECONFIG_GCP: ${{ secrets.KUBECONFIG_GCP }} # kubeconfig content for GCP cluster
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          echo "$KUBECONFIG_AWS" > kubeconfig_aws
          echo "$KUBECONFIG_GCP" > kubeconfig_gcp
          export KUBECONFIG=kubeconfig_aws
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          export KUBECONFIG=kubeconfig_gcp
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,commit,author
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

